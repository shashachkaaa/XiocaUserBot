from utils.imports import *
from utils.func import *
from utils.misc import *

@Client.on_message(filters.command('ownerlist', prefixes=prefix) & filters.user(allowed))
async def ownerlist(client, message):
	text = f'<emoji id=5778423822940114949>üõ°</emoji> <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏–º–µ—é—â–∏—Ö –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É:\n\n</b>'
	
	allo = db.get("core.main", "allow")
	num = 0
	for i in allo:
		num += 1
		text += f'<emoji id=4971987363145188045>‚ñ´Ô∏è</emoji> <b><a href="tg://openmessage?user_id={i}">{num} –Æ–∑–µ—Ä</a></b> (<code>{i}</code>)\n'
	await answer(message, text)
		
@Client.on_message(filters.command('owneradd', prefixes=prefix) & filters.me)
async def owneradd(client, message):
	try:
		rid = message.reply_to_message.from_user.id
		name = message.reply_to_message.from_user.first_name
	except:
		return await answer(message, '<emoji id=5237993272109967450>‚ùå</emoji> <b>–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>')
		
	list = []
	allo = db.get("core.main", "allow")
	for i in allo:
		list.append(i)
		
	if rid in allo:
		return await answer(message, f'<emoji id=5237993272109967450>‚ùå</emoji> <b>–£ {name} —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É!</b>')
	else:
		await answer(message, f'<emoji id=5778423822940114949>üõ°</emoji> <b>{name} –±—ã–ª –≤—ã–¥–∞–Ω –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É! Xioca –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤..</b>')
		db.set("core.main", "allow", 0)
		list.append(rid)
		db.set("core.main", "allow", list)
		db.set(
			"core.updater",
			"restart_info",
			{
				"type": "restart",
				"chat_id": message.chat.id,
				"message_id": message.id,
				"last_time": time.time()
			},
		)
		restart()

@Client.on_message(filters.command('ownerrm', prefixes=prefix) & filters.me)
async def ownerrm(client, message):
	try:
		rid = message.reply_to_message.from_user.id
		name = message.reply_to_message.from_user.first_name
	except:
		return await answer(message, '<emoji id=5237993272109967450>‚ùå</emoji> <b>–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>')
		
	list = []
	allo = db.get("core.main", "allow")
	for i in allo:
		list.append(i)
	
	me = await client.get_me()
	meid = me.id
		
	if rid not in allo:
		return await answer(message, f'<emoji id=5237993272109967450>‚ùå</emoji> <b>–£ {name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É!</b>')
	else:
		if rid == meid:
			return await answer(message, f'<emoji id=5237993272109967450>‚ùå</emoji> <b>–ù–µ–ª—å–∑—è –æ—Ç–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø —É —Å–∞–º–æ–≥–æ —Å–µ–±—è!</b>')
		await answer(message, f'<emoji id=5778423822940114949>üõ°</emoji> <b>–£ {name} –æ—Ç–Ω—è—Ç –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É! Xioca –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤..</b>')
		db.set("core.main", "allow", 0)
		list.remove(rid)
		db.set("core.main", "allow", list)
		db.set(
			"core.updater",
			"restart_info",
			{
				"type": "restart",
				"chat_id": message.chat.id,
				"message_id": message.id,
				"last_time": time.time()
			},
		)
		restart()

@Client.on_message(filters.command('setinfo', prefixes=prefix) & filters.user(allowed))
async def setinfo(client, message):
	try:
		qu = message.text
		qu = qu.replace(f'{prefix}setinfo ', "")
		if qu == 'off':
			db.set("core.main", 'type_info', "xioca")
			return await answer(message, f"<emoji id=5237907553152672597>‚úÖ</emoji> <b>–ò–Ω—Ñ–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!</b>")
	except Exception as e:
		print(e)
		pass
		
	try:
		m = str(message.reply_to_message.media)
	except Exception as e:
		return await answer(message, '<emoji id=5237993272109967450>‚ùå</emoji> <b>–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Ñ–æ—Ç–æ, GIF –∏–ª–∏ –≤–∏–¥–µ–æ!</b>')

	msg = message.reply_to_message
	
	if m == 'MessageMediaType.PHOTO':
		type = "photo"
		id = msg.photo.file_id
	elif m == "MessageMediaType.ANIMATION":
		type = "animation"
		id = msg.animation.file_id
	elif m == "MessageMediaType.VIDEO":
		type = "video"
		id = msg.video.file_id
	else:
		return await answer(message, f'<emoji id=5237993272109967450>‚ùå</emoji> <b>–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Ñ–æ—Ç–æ, GIF –∏–ª–∏ –≤–∏–¥–µ–æ!</b> {m}')
	
	await answer(message, f"<emoji id=5237907553152672597>‚úÖ</emoji> <b>–ò–Ω—Ñ–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!</b>")
	db.set("core.main", 'type_info', type)
	db.set('core.main', "info", id)	
		
@Client.on_message(filters.command('setprefix', prefixes=prefix) & filters.user(allowed))
async def setprefix(client, message):
	qu = " ".join(message.text.split()[1:])
	if len(qu) >= 2:
		return await answer(message, f'<emoji id=5237993272109967450>‚ùå</emoji> <b>–ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 1 —Å–∏–º–≤–æ–ª–∞!</b>')
	
	await answer(message, f'<emoji id=5237907553152672597>‚úÖ</emoji> <b>–ü—Ä–µ—Ñ–∏–∫—Å "{qu}" —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! Xioca –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞</b>')
	db.set(
        "core.updater",
        "restart_info",
        {
            "type": "setpref",
            "chat_id": message.chat.id,
            "message_id": message.id,
            "last_time": time.time()
        },
    )
	db.set("core.main", "prefix", qu)
	restart()

modules_help["settings"] = {
	"owneradd [–æ—Ç–≤–µ—Ç]": "–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É",
	"ownerrm [–æ—Ç–≤–µ—Ç]": "–û—Ç–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É",
	"ownerlist": "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏–º–µ—é—â–∏—Ö –¥–æ—Å—Ç—É–ø –∫ —é–∑–µ—Ä–±–æ—Ç—É",
	"setprefix [–ø—Ä–µ—Ñ–∏–∫—Å]": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥",
	"setinfo [–æ—Ç–≤–µ—Ç/off]": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ, GIF –∏–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ –∏–Ω—Ñ–æ"
}