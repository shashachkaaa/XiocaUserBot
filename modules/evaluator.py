from utils.imports import *
from utils.func import *
from utils.misc import *

@Client.on_message(filters.command(["eval", 'e'], prefixes=prefix) & filters.me)
async def ev(client, message):
    	code = " ".join(message.text.split()[1:])
    	try:
    	   result = eval(code)
    	   try:
    	   	return await message.edit_text(f'''<emoji id=5339181821135431228>üíª</emoji> <b>–ö–æ–¥:</b>
```python
{code}```

<emoji id=5175061663237276437>üêç</emoji> <b>–í—ã–≤–æ–¥:</b>
```python
{result}```''')
    	   except:
    	   	with open('eval_output.txt', 'w') as f:
    	   		f.write(f'''üíª –ö–æ–¥:
{code}

üêç –í—ã–≤–æ–¥:
{result}''')
    	   	await message.delete()
    	   	await client.send_document(message.chat.id, document='eval_output.txt', caption='<emoji id=5175061663237276437>üêç</emoji> <b>–í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã —Å–ª–∏–∂–∫–æ–º –±–æ–ª—å—à–æ–π –∏ –±—ã–ª –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ —Ñ–∞–π–ª...</b>')
    	   	os.remove('eval_output.txt')
    	   	return
    	except Exception as ex:
    		return await message.edit_text(format_exc(ex))

modules_help['evaluator'] = {
	"eval [–∫–æ–¥]": "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä python",
	"e [–∫–æ–¥]": "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä python"
}